class Solution {
public:
    vector<vector<int>> ans;
    vector<int> cur;
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(),candidates.end());
        dfs(candidates,target,0);
        return ans;
    }
    void dfs(vector<int>& candidates,int sum,int r) {
        if(sum==0) {
            ans.push_back(cur);
            return ;
        }
        if(sum<0)
            return ;
        for(int i=r;i<candidates.size();i++) {
            if(i>r && candidates[i]==candidates[i-1])
                continue;
            cur.push_back(candidates[i]);
            dfs(candidates,sum-candidates[i],i+1);
            cur.pop_back();
        }
        return ;
    }
};
