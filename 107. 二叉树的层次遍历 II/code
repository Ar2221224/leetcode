class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        queue<TreeNode*> que; //线性表
        if(root!=NULL)
            que.push(root);
        vector<vector<int>> result;
        while(!que.empty()) {
            int size=que.size();
            vector<int> layer;
            for(int i=0;i<size;i++) { //此处que.size()是变化的 不可省略为i<que.size()
                TreeNode* node=que.front();
                layer.push_back(node->val);
                que.pop();
                if(node->left) que.push(node->left);
                if(node->right) que.push(node->right);
            }
            result.push_back(layer);
        }
        reverse(result.begin(),result.end());
        return result;
    }
};
